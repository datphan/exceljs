{"version":3,"file":"styles-xform.js","names":["Enums","require","XmlStream","BaseXform","StaticXform","ListXform","FontXform","FillXform","BorderXform","NumFmtXform","StyleXform","DxfXform","ColorXform","IndexColorXform","constructor","name","map","rgbColor","tag","render","xmlStream","model","openNode","closeNode","parseOpen","node","parser","parseText","text","parseClose","item","undefined","NUMFMT_BASE","StylesXform","initialise","console","log","numFmts","count","childXform","fonts","$","fills","borders","cellStyleXfs","cellXfs","xfId","dxfs","always","numFmt","font","fill","border","style","cellStyles","STATIC_XFORMS","tableStyles","extLst","colors","indexedColor","init","initIndex","index","numFmtNextId","styles","_addBorder","_addStyle","numFmtId","fontId","fillId","borderId","indexedColorId","_addFill","type","pattern","_addIndexedColor","weakMap","WeakMap","openXml","StdDocAttributes","STYLESHEET_ATTRIBUTES","length","forEach","numFmtXml","writeXml","_addFont","size","color","theme","family","scheme","fontXml","fillXml","borderXml","styleXml","colorXml","add","propName","xform","numFmtIndex","id","formatCode","addStyleModel","cellType","has","get","ValueType","Number","_addNumFmtStr","Date","alignment","protection","styleId","set","getStyleModel","getDefaultFmtCode","addStyle","group","part","addDxfStyle","push","getDxfStyle","xml","toXml","getDefaultFmtId","xmlns","c","builtinId","defaultTableStyle","defaultPivotStyle","uri","defaultSlicerStyle","defaultTimelineStyle","StylesXformMock","parseStream","stream","autodrain","Promise","resolve","dateStyleId","_dateStyleId","dateStyle","Mock","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/styles-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst Enums = require('../../../doc/enums');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst StaticXform = require('../static-xform');\nconst ListXform = require('../list-xform');\nconst FontXform = require('./font-xform');\nconst FillXform = require('./fill-xform');\nconst BorderXform = require('./border-xform');\nconst NumFmtXform = require('./numfmt-xform');\nconst StyleXform = require('./style-xform');\nconst DxfXform = require('./dxf-xform');\nconst ColorXform = require('./color-xform');\n\n// class IndexColorXform extends BaseXform {\n//   constructor(options) {\n//     super();\n\n//     this.options = options || IndexColorXform.OPTIONS;\n\n//     this.map = {\n//       rgbColor: {prop: 'rgbColor', xform: new ColorXform('rgbColor')},\n//     };\n//   }\n\n//   get tag() {\n//     return this.options.tagName;\n//   }\n\n//   render(xmlStream, model) {\n//     const {map} = this;\n\n//     xmlStream.openNode(this.options.tagName);\n//     _.each(this.map, (defn, tag) => {\n//       map[tag].xform.render(xmlStream, model[defn.prop]);\n//     });\n//     xmlStream.closeNode();\n//   }\n\n//   parseOpen(node) {\n//     if (this.parser) {\n//       this.parser.parseOpen(node);\n//       return true;\n//     }\n//     if (this.map[node.name]) {\n//       this.parser = this.map[node.name].xform;\n//       return this.parser.parseOpen(node);\n//     }\n//     switch (node.name) {\n//       case this.options.tagName:\n//         this.model = {};\n//         return true;\n//       default:\n//         return false;\n//     }\n//   }\n\n//   parseText(text) {\n//     if (this.parser) {\n//       this.parser.parseText(text);\n//     }\n//   }\n\n//   parseClose(name) {\n//     if (this.parser && !this.parser.parseClose(name)) {\n//       const item = this.map[name];\n//       if (this.parser.model) {\n//         this.model[item.prop] = this.parser.model;\n//       }\n//       this.parser = undefined;\n//       return true;\n//     }\n//     switch (name) {\n//       case this.options.tagName:\n//         return false;\n//       default:\n//         return true;\n//     }\n//   }\n// }\n// IndexColorXform.OPTIONS = {\n//   tagName: 'indexedColors',\n// };\n\n\n/*\n<fills count=\"5\">\n  <fill>\n    <patternFill patternType=\"none\"/>\n  </fill>\n</fills>\n\n<colors>\n  <indexedColors>\n    <rgbColor rgb=\"ff000000\"/>\n    <rgbColor rgb=\"ffffffff\"/>\n  </indexedColors>\n</colors>\n*/\n\n// class RgbColorXform extends BaseXform {\n//   constructor() {\n//     super();\n//   }\n\n//   get name() {\n//     return 'rgbColor';\n//   }\n\n//   get tag() {\n//     return 'rgbColor';\n//   }\n\n//   render(xmlStream, model) {\n//     xmlStream.openNode('rgbColor');\n//     xmlStream.addAttributes(model.attributes);\n//     xmlStream.closeNode();\n//   }\n\n//   parseOpen(node) {\n//     console.log('RgbColorXform parseOpen', node)\n//     if (this.parser) {\n//       this.parser.parseOpen(node);\n//       return true;\n//     }\n//     switch (node.name) {\n//       case 'rgbColor':\n//         this.model = {\n//           type: 'rgbColor',\n//           attributes: node.attributes,\n//         };\n//         return true;\n//       default:\n//         this.parser = this.map[node.name];\n//         if (this.parser) {\n//           this.parser.parseOpen(node);\n//           return true;\n//         }\n//         return false;\n//     }\n//   }\n\n//   parseText(text) {\n//     if (this.parser) {\n//       this.parser.parseText(text);\n//     }\n//   }\n\n//   parseClose(name) {\n//     if (this.parser) {\n//       if (!this.parser.parseClose(name)) {\n//         if (this.parser.model) {\n//           this.model[name] = this.parser.model;\n//         }\n//         this.parser = undefined;\n//       }\n//       return true;\n//     }\n//     return false;\n//   }\n// }\n\nclass IndexColorXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.name = 'indexedColors';\n\n    this.map = {\n      rgbColor: new ColorXform('rgbColor'),\n    };\n  }\n\n  get tag() {\n    return this.name;\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.name);\n    this.map.rgbColor.render(xmlStream, model.rgbColor);\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    if (this.map[node.name]) {\n      this.parser = this.map[node.name];\n      return this.parser.parseOpen(node);\n    }\n    switch (node.name) {\n      case this.name:\n        this.model = {};\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser && !this.parser.parseClose(name)) {\n      const item = this.map[name];\n      if (this.parser.model) {\n        this.model[name] = this.parser.model;\n      }\n      this.parser = undefined;\n      return true;\n    }\n    switch (name) {\n      case this.name:\n        return false;\n      default:\n        return true;\n    }\n  }\n\n  // render(xmlStream, model) {\n  //   console.log('IndexColorXform render', model)\n  //   xmlStream.addRollback();\n  //   xmlStream.openNode(this.name);\n  //   const type = model && model.type;\n  //   switch (type) {\n  //     case 'rgbColor':\n  //       this.map.rgbColor.render(xmlStream, model);\n  //       break;\n  //     default:\n  //       xmlStream.rollback();\n  //       return;\n  //   }\n  //   xmlStream.closeNode();\n  //   xmlStream.commit();\n  // }\n\n  // parseOpen(node) {\n  //   if (this.parser) {\n  //     this.parser.parseOpen(node);\n  //     return true;\n  //   }\n  //   switch (node.name) {\n  //     case this.name:\n  //       this.model = {};\n  //       return true;\n  //     default:\n  //       this.parser = this.map[node.name];\n  //       if (this.parser) {\n  //         this.parser.parseOpen(node);\n  //         return true;\n  //       }\n  //       return false;\n  //   }\n  // }\n\n  // parseText(text) {\n  //   if (this.parser) {\n  //     this.parser.parseText(text);\n  //   }\n  // }\n\n  // parseClose(name) {\n  //   if (this.parser) {\n  //     if (!this.parser.parseClose(name)) {\n  //       this.model = this.parser.model;\n  //       this.model.type = this.parser.name;\n  //       this.parser = undefined;\n  //     }\n  //     return true;\n  //   }\n  //   return false;\n  // }\n}\n\n// class IndexedColorsXform extends BaseXform {\n//   constructor(name) {\n//     super();\n\n//     this.name = name;\n//     this.map = {\n//       rgbColor: new ColorXform('rgbColor'),\n//     };\n//   }\n\n//   get tag() {\n//     return this.name;\n//   }\n\n//   render(xmlStream, model) {\n//     const rgbColor = model && model.rgbColor;\n//     xmlStream.openNode(this.name);\n//     if (model && rgbColor) {\n//       this.map.rgbColor.render(xmlStream, rgbColor);\n//     }\n//     xmlStream.closeNode();\n//   }\n\n//   parseOpen(node) {\n//     if (this.parser) {\n//       this.parser.parseOpen(node);\n//       return true;\n//     }\n//     switch (node.name) {\n//       case this.name: {\n//         return true;\n//       }\n//       case 'rgbColor':\n//         this.parser = this.map.rgbColor;\n//         this.parser.parseOpen(node);\n//         return true;\n//       default:\n//         return false;\n//     }\n//   }\n\n//   parseText(text) {\n//     if (this.parser) {\n//       this.parser.parseText(text);\n//     }\n//   }\n\n//   parseClose(name) {\n//     if (this.parser) {\n//       if (!this.parser.parseClose(name)) {\n//         this.parser = undefined;\n//       }\n//       return true;\n//     }\n\n//     if (name === this.name) {\n//       if (this.map.rgbColor.model) {\n//         if (!this.model) {\n//           this.model = {};\n//         }\n//         this.model.rgbColor = this.map.rgbColor.model;\n//       }\n//     }\n\n//     return false;\n//   }\n// }\n\n// class IndexColorXform extends BaseXform {\n//   constructor() {\n//     super();\n\n//     this.map = {\n//       indexedColors: new IndexedColorsXform('indexedColors'),\n//     };\n//   }\n\n  // render(xmlStream, model) {\n  //   const {rgbColor} = model;\n  //   xmlStream.openNode('indexedColors');\n  //   function add(childModel, childXform) {\n  //     if (childModel && !childModel.rgbColor && model.rgbColor) {\n  //       childModel = {\n  //         ...childModel,\n  //         rgbColor: model.rgbColor,\n  //       };\n  //     }\n  //     childXform.render(xmlStream, childModel, rgbColor);\n  //   }\n  //   add(model.rgbColor, this.map.rgbColor);\n\n  //   xmlStream.closeNode();\n  // }\n\n//   parseOpen(node) {\n//     if (this.parser) {\n//       this.parser.parseOpen(node);\n//       return true;\n//     }\n//     switch (node.name) {\n//       case 'indexedColors':\n//         this.reset();\n//         return true;\n//       default:\n//         this.parser = this.map[node.name];\n//         if (this.parser) {\n//           this.parser.parseOpen(node);\n//           return true;\n//         }\n//         return false;\n//     }\n//   }\n\n//   parseText(text) {\n//     if (this.parser) {\n//       this.parser.parseText(text);\n//     }\n//   }\n\n//   parseClose(name) {\n//     if (this.parser) {\n//       if (!this.parser.parseClose(name)) {\n//         this.parser = undefined;\n//       }\n//       return true;\n//     }\n//     if (name === 'indexedColors') {\n//       const model = (this.model = {});\n//       const add = function(key, edgeModel, extensions) {\n//         if (edgeModel) {\n//           if (extensions) {\n//             Object.assign(edgeModel, extensions);\n//           }\n//           model[key] = edgeModel;\n//         }\n//       };\n//       add('rgbColor', this.map.rgbColor.model);\n//     }\n//     return false;\n//   }\n// }\n\n\n// custom numfmt ids start here\nconst NUMFMT_BASE = 164;\n\n// =============================================================================\n// StylesXform is used to generate and parse the styles.xml file\n// it manages the collections of fonts, number formats, alignments, etc\nclass StylesXform extends BaseXform {\n  constructor(initialise) {\n    console.log('init StylesXform', initialise)\n    super();\n    this.map = {\n      numFmts: new ListXform({\n        tag: 'numFmts',\n        count: true,\n        childXform: new NumFmtXform()\n      }),\n      fonts: new ListXform({\n        tag: 'fonts',\n        count: true,\n        childXform: new FontXform(),\n        $: {\n          'x14ac:knownFonts': 1\n        }\n      }),\n      fills: new ListXform({\n        tag: 'fills',\n        count: true,\n        childXform: new FillXform()\n      }),\n      borders: new ListXform({\n        tag: 'borders',\n        count: true,\n        childXform: new BorderXform()\n      }),\n      cellStyleXfs: new ListXform({\n        tag: 'cellStyleXfs',\n        count: true,\n        childXform: new StyleXform()\n      }),\n      cellXfs: new ListXform({\n        tag: 'cellXfs',\n        count: true,\n        childXform: new StyleXform({\n          xfId: true\n        })\n      }),\n      dxfs: new ListXform({\n        tag: 'dxfs',\n        always: true,\n        count: true,\n        childXform: new DxfXform()\n      }),\n      // for style manager\n      numFmt: new NumFmtXform(),\n      font: new FontXform(),\n      fill: new FillXform(),\n      border: new BorderXform(),\n      style: new StyleXform({\n        xfId: true\n      }),\n      cellStyles: StylesXform.STATIC_XFORMS.cellStyles,\n      tableStyles: StylesXform.STATIC_XFORMS.tableStyles,\n      extLst: StylesXform.STATIC_XFORMS.extLst,\n\n      colors: new ListXform({\n        tag: 'colors',\n        count: false,\n        childXform: new IndexColorXform(),\n      }),\n      indexedColor: new IndexColorXform(),\n    };\n    if (initialise) {\n      // StylesXform also acts as style manager and is used to build up styles-model during worksheet processing\n      this.init();\n    }\n  }\n  initIndex() {\n    this.index = {\n      style: {},\n      numFmt: {},\n      numFmtNextId: 164,\n      // start custom format ids here\n      font: {},\n      border: {},\n      fill: {},\n      indexedColor: {},\n    };\n  }\n  init() {\n    // Prepare for Style Manager role\n    this.model = {\n      styles: [],\n      numFmts: [],\n      fonts: [],\n      borders: [],\n      fills: [],\n      dxfs: [],\n      colors: [],\n    };\n    this.initIndex();\n\n    // default (zero) border\n    this._addBorder({});\n\n    // add default (all zero) style\n    this._addStyle({\n      numFmtId: 0,\n      fontId: 0,\n      fillId: 0,\n      borderId: 0,\n      xfId: 0,\n      indexedColorId: 0,\n    });\n\n    // add default fills\n    this._addFill({\n      type: 'pattern',\n      pattern: 'none'\n    });\n    this._addFill({\n      type: 'pattern',\n      pattern: 'gray125'\n    });\n\n    this._addIndexedColor({});\n    this.weakMap = new WeakMap();\n  }\n  render(xmlStream, model) {\n    console.log('render model', model);\n    model = model || this.model;\n    //\n    //   <fonts count=\"2\" x14ac:knownFonts=\"1\">\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode('styleSheet', StylesXform.STYLESHEET_ATTRIBUTES);\n    if (this.index) {\n      // model has been built by style manager role (contains xml)\n      if (model.numFmts && model.numFmts.length) {\n        xmlStream.openNode('numFmts', {\n          count: model.numFmts.length\n        });\n        model.numFmts.forEach(numFmtXml => {\n          xmlStream.writeXml(numFmtXml);\n        });\n        xmlStream.closeNode();\n      }\n      if (!model.fonts.length) {\n        // default (zero) font\n        this._addFont({\n          size: 11,\n          color: {\n            theme: 1\n          },\n          name: 'Calibri',\n          family: 2,\n          scheme: 'minor'\n        });\n      }\n      xmlStream.openNode('fonts', {\n        count: model.fonts.length,\n        'x14ac:knownFonts': 1\n      });\n      model.fonts.forEach(fontXml => {\n        xmlStream.writeXml(fontXml);\n      });\n      xmlStream.closeNode();\n      xmlStream.openNode('fills', {\n        count: model.fills.length\n      });\n      model.fills.forEach(fillXml => {\n        xmlStream.writeXml(fillXml);\n      });\n      xmlStream.closeNode();\n      xmlStream.openNode('borders', {\n        count: model.borders.length\n      });\n      model.borders.forEach(borderXml => {\n        xmlStream.writeXml(borderXml);\n      });\n      xmlStream.closeNode();\n      this.map.cellStyleXfs.render(xmlStream, [{\n        numFmtId: 0,\n        fontId: 0,\n        fillId: 0,\n        borderId: 0,\n        xfId: 0\n      }]);\n      xmlStream.openNode('cellXfs', {\n        count: model.styles.length\n      });\n      model.styles.forEach(styleXml => {\n        xmlStream.writeXml(styleXml);\n      });\n      xmlStream.closeNode();\n\n      xmlStream.openNode('colors', {\n        count: model.colors.length\n      });\n      model.colors.forEach(colorXml => {\n        xmlStream.writeXml(colorXml);\n      });\n      xmlStream.closeNode();\n    } else {\n      // model is plain JSON and needs to be xformed\n      this.map.numFmts.render(xmlStream, model.numFmts);\n      this.map.fonts.render(xmlStream, model.fonts);\n      this.map.fills.render(xmlStream, model.fills);\n      this.map.borders.render(xmlStream, model.borders);\n      this.map.cellStyleXfs.render(xmlStream, [{\n        numFmtId: 0,\n        fontId: 0,\n        fillId: 0,\n        borderId: 0,\n        xfId: 0\n      }]);\n      this.map.cellXfs.render(xmlStream, model.styles);\n      this.map.colors.render(xmlStream, model.colors);\n    }\n    StylesXform.STATIC_XFORMS.cellStyles.render(xmlStream);\n    this.map.dxfs.render(xmlStream, model.dxfs);\n    StylesXform.STATIC_XFORMS.tableStyles.render(xmlStream);\n    StylesXform.STATIC_XFORMS.extLst.render(xmlStream);\n    xmlStream.closeNode();\n  }\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'styleSheet':\n        this.initIndex();\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        return true;\n    }\n  }\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'styleSheet':\n        {\n          this.model = {};\n          const add = (propName, xform) => {\n            if (xform.model && xform.model.length) {\n              this.model[propName] = xform.model;\n            }\n          };\n          add('numFmts', this.map.numFmts);\n          add('fonts', this.map.fonts);\n          add('fills', this.map.fills);\n          add('borders', this.map.borders);\n          add('styles', this.map.cellXfs);\n          add('dxfs', this.map.dxfs);\n          add('colors', this.map.colors);\n\n          // index numFmts\n          this.index = {\n            model: [],\n            numFmt: []\n          };\n          if (this.model.numFmts) {\n            const numFmtIndex = this.index.numFmt;\n            this.model.numFmts.forEach(numFmt => {\n              numFmtIndex[numFmt.id] = numFmt.formatCode;\n            });\n          }\n          return false;\n        }\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    if (!model) {\n      return 0;\n    }\n\n    // if we have no default font, add it here now\n    if (!this.model.fonts.length) {\n      // default (zero) font\n      this._addFont({\n        size: 11,\n        color: {\n          theme: 1\n        },\n        name: 'Calibri',\n        family: 2,\n        scheme: 'minor'\n      });\n    }\n\n    // if we have seen this style object before, assume it has the same styleId\n    if (this.weakMap && this.weakMap.has(model)) {\n      return this.weakMap.get(model);\n    }\n    const style = {};\n    cellType = cellType || Enums.ValueType.Number;\n    if (model.numFmt) {\n      style.numFmtId = this._addNumFmtStr(model.numFmt);\n    } else {\n      switch (cellType) {\n        case Enums.ValueType.Number:\n          style.numFmtId = this._addNumFmtStr('General');\n          break;\n        case Enums.ValueType.Date:\n          style.numFmtId = this._addNumFmtStr('mm-dd-yy');\n          break;\n        default:\n          break;\n      }\n    }\n    if (model.font) {\n      style.fontId = this._addFont(model.font);\n    }\n    if (model.border) {\n      style.borderId = this._addBorder(model.border);\n    }\n    if (model.fill) {\n      style.fillId = this._addFill(model.fill);\n    }\n    if (model.indexedColor) {\n      style.indexedColorId = this._addIndexedColor(model.indexedColor);\n    }\n    if (model.alignment) {\n      style.alignment = model.alignment;\n    }\n    if (model.protection) {\n      style.protection = model.protection;\n    }\n    const styleId = this._addStyle(style);\n    if (this.weakMap) {\n      this.weakMap.set(model, styleId);\n    }\n    return styleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(id) {\n    // if the style doesn't exist return null\n    const style = this.model.styles[id];\n    if (!style) return null;\n\n    // have we built this model before?\n    let model = this.index.model[id];\n    if (model) return model;\n\n    // build a new model\n    model = this.index.model[id] = {};\n\n    // -------------------------------------------------------\n    // number format\n    if (style.numFmtId) {\n      const numFmt = this.index.numFmt[style.numFmtId] || NumFmtXform.getDefaultFmtCode(style.numFmtId);\n      if (numFmt) {\n        model.numFmt = numFmt;\n      }\n    }\n    function addStyle(name, group, styleId) {\n      if (styleId || styleId === 0) {\n        const part = group[styleId];\n        if (part) {\n          model[name] = part;\n        }\n      }\n    }\n    addStyle('font', this.model.fonts, style.fontId);\n    addStyle('border', this.model.borders, style.borderId);\n    addStyle('fill', this.model.fills, style.fillId);\n    addStyle('indexedColor', this.model.colors, style.indexedColorId);\n\n    // -------------------------------------------------------\n    // alignment\n    if (style.alignment) {\n      model.alignment = style.alignment;\n    }\n\n    // -------------------------------------------------------\n    // protection\n    if (style.protection) {\n      model.protection = style.protection;\n    }\n    return model;\n  }\n  addDxfStyle(style) {\n    if (style.numFmt) {\n      // register numFmtId to use it during dxf-xform rendering\n      style.numFmtId = this._addNumFmtStr(style.numFmt);\n    }\n    this.model.dxfs.push(style);\n    return this.model.dxfs.length - 1;\n  }\n  getDxfStyle(id) {\n    return this.model.dxfs[id];\n  }\n\n  // =========================================================================\n  // Private Interface\n  _addStyle(style) {\n    const xml = this.map.style.toXml(style);\n    let index = this.index.style[xml];\n    if (index === undefined) {\n      index = this.index.style[xml] = this.model.styles.length;\n      this.model.styles.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Number Formats\n  _addNumFmtStr(formatCode) {\n    // check if default format\n    let index = NumFmtXform.getDefaultFmtId(formatCode);\n    if (index !== undefined) return index;\n\n    // check if already in\n    index = this.index.numFmt[formatCode];\n    if (index !== undefined) return index;\n    index = this.index.numFmt[formatCode] = NUMFMT_BASE + this.model.numFmts.length;\n    const xml = this.map.numFmt.toXml({\n      id: index,\n      formatCode\n    });\n    this.model.numFmts.push(xml);\n    return index;\n  }\n\n  // =========================================================================\n  // Fonts\n  _addFont(font) {\n    const xml = this.map.font.toXml(font);\n    let index = this.index.font[xml];\n    if (index === undefined) {\n      index = this.index.font[xml] = this.model.fonts.length;\n      this.model.fonts.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Borders\n  _addBorder(border) {\n    const xml = this.map.border.toXml(border);\n    let index = this.index.border[xml];\n    if (index === undefined) {\n      index = this.index.border[xml] = this.model.borders.length;\n      this.model.borders.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Fills\n  _addFill(fill) {\n    const xml = this.map.fill.toXml(fill);\n    let index = this.index.fill[xml];\n    if (index === undefined) {\n      index = this.index.fill[xml] = this.model.fills.length;\n      this.model.fills.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n\n  // =========================================================================\n  // Colors\n  _addIndexedColor(indexedColor) {\n    const xml = this.map.indexedColor.toXml(indexedColor);\n    let index = this.index.indexedColor[xml];\n    if (index === undefined) {\n      index = this.index.indexedColor[xml] = this.model.colors.length;\n      this.model.colors.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n}\n\nStylesXform.STYLESHEET_ATTRIBUTES = {\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n  'mc:Ignorable': 'x14ac x16r2',\n  'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n  'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\n};\nStylesXform.STATIC_XFORMS = {\n  cellStyles: new StaticXform({\n    tag: 'cellStyles',\n    $: {count: 1},\n    c: [{tag: 'cellStyle', $: {name: 'Normal', xfId: 0, builtinId: 0}}],\n  }),\n  dxfs: new StaticXform({tag: 'dxfs', $: {count: 0}}),\n  tableStyles: new StaticXform({\n    tag: 'tableStyles',\n    $: {count: 0, defaultTableStyle: 'TableStyleMedium2', defaultPivotStyle: 'PivotStyleLight16'},\n  }),\n  extLst: new StaticXform({\n    tag: 'extLst',\n    c: [\n      {\n        tag: 'ext',\n        $: {\n          uri: '{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}',\n          'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\n        },\n        c: [{tag: 'x14:slicerStyles', $: {defaultSlicerStyle: 'SlicerStyleLight1'}}],\n      },\n      {\n        tag: 'ext',\n        $: {\n          uri: '{9260A510-F301-46a8-8635-F512D64BE5F5}',\n          'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main',\n        },\n        c: [{tag: 'x15:timelineStyles', $: {defaultTimelineStyle: 'TimeSlicerStyleLight1'}}],\n      },\n    ],\n  }),\n};\n\n// the stylemanager mock acts like StyleManager except that it always returns 0 or {}\nclass StylesXformMock extends StylesXform {\n  constructor() {\n    super();\n\n    this.model = {\n      styles: [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}],\n      numFmts: [],\n      fonts: [{size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'}],\n      borders: [{}],\n      fills: [\n        {type: 'pattern', pattern: 'none'},\n        {type: 'pattern', pattern: 'gray125'},\n      ],\n    };\n  }\n\n  // =========================================================================\n  // Style Manager Interface\n\n  // override normal behaviour - consume and dispose\n  parseStream(stream) {\n    stream.autodrain();\n    return Promise.resolve();\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    switch (cellType) {\n      case Enums.ValueType.Date:\n        return this.dateStyleId;\n      default:\n        return 0;\n    }\n  }\n\n  get dateStyleId() {\n    if (!this._dateStyleId) {\n      const dateStyle = {\n        numFmtId: NumFmtXform.getDefaultFmtId('mm-dd-yy'),\n      };\n      this._dateStyleId = this.model.styles.length;\n      this.model.styles.push(dateStyle);\n    }\n    return this._dateStyleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(/* id */) {\n    return {};\n  }\n}\n\nStylesXform.Mock = StylesXformMock;\n\nmodule.exports = StylesXform;\n"],"mappings":";;AAAA;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC3C,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAEtD,MAAME,SAAS,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMG,WAAW,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAC9C,MAAMI,SAAS,GAAGJ,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMK,SAAS,GAAGL,OAAO,CAAC,cAAc,CAAC;AACzC,MAAMM,SAAS,GAAGN,OAAO,CAAC,cAAc,CAAC;AACzC,MAAMO,WAAW,GAAGP,OAAO,CAAC,gBAAgB,CAAC;AAC7C,MAAMQ,WAAW,GAAGR,OAAO,CAAC,gBAAgB,CAAC;AAC7C,MAAMS,UAAU,GAAGT,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMU,QAAQ,GAAGV,OAAO,CAAC,aAAa,CAAC;AACvC,MAAMW,UAAU,GAAGX,OAAO,CAAC,eAAe,CAAC;;AAE3C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMY,eAAe,SAASV,SAAS,CAAC;EACtCW,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,IAAI,GAAG,eAAe;IAE3B,IAAI,CAACC,GAAG,GAAG;MACTC,QAAQ,EAAE,IAAIL,UAAU,CAAC,UAAU;IACrC,CAAC;EACH;EAEA,IAAIM,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACH,IAAI;EAClB;EAEAI,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IACvBD,SAAS,CAACE,QAAQ,CAAC,IAAI,CAACP,IAAI,CAAC;IAC7B,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACE,MAAM,CAACC,SAAS,EAAEC,KAAK,CAACJ,QAAQ,CAAC;IACnDG,SAAS,CAACG,SAAS,CAAC,CAAC;EACvB;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;MAC3B,OAAO,IAAI;IACb;IACA,IAAI,IAAI,CAACT,GAAG,CAACS,IAAI,CAACV,IAAI,CAAC,EAAE;MACvB,IAAI,CAACW,MAAM,GAAG,IAAI,CAACV,GAAG,CAACS,IAAI,CAACV,IAAI,CAAC;MACjC,OAAO,IAAI,CAACW,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;IACpC;IACA,QAAQA,IAAI,CAACV,IAAI;MACf,KAAK,IAAI,CAACA,IAAI;QACZ,IAAI,CAACM,KAAK,GAAG,CAAC,CAAC;QACf,OAAO,IAAI;MACb;QACE,OAAO,KAAK;IAChB;EACF;EAEAM,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACF,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACC,SAAS,CAACC,IAAI,CAAC;IAC7B;EACF;EAEAC,UAAUA,CAACd,IAAI,EAAE;IACf,IAAI,IAAI,CAACW,MAAM,IAAI,CAAC,IAAI,CAACA,MAAM,CAACG,UAAU,CAACd,IAAI,CAAC,EAAE;MAChD,MAAMe,IAAI,GAAG,IAAI,CAACd,GAAG,CAACD,IAAI,CAAC;MAC3B,IAAI,IAAI,CAACW,MAAM,CAACL,KAAK,EAAE;QACrB,IAAI,CAACA,KAAK,CAACN,IAAI,CAAC,GAAG,IAAI,CAACW,MAAM,CAACL,KAAK;MACtC;MACA,IAAI,CAACK,MAAM,GAAGK,SAAS;MACvB,OAAO,IAAI;IACb;IACA,QAAQhB,IAAI;MACV,KAAK,IAAI,CAACA,IAAI;QACZ,OAAO,KAAK;MACd;QACE,OAAO,IAAI;IACf;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,MAAMiB,WAAW,GAAG,GAAG;;AAEvB;AACA;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","ignoreList":[]}