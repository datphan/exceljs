{"version":3,"file":"exceljs.spec.js","names":["unexpectedError","done","error","console","message","stack","expect","toEqual","describe","it","wb","ExcelJS","Workbook","ws","addWorksheet","getCell","value","xlsx","writeBuffer","then","buffer","wb2","load","ws2","getWorksheet","toBeTruthy","catch","options","base64","toString","csv"],"sources":["../../../spec/browser/exceljs.spec.js"],"sourcesContent":["/* global ExcelJS */\n// ExcelJS is a global injected by `./dist/exceljs.js` during jasmine's setup\n\n'use strict';\n\nfunction unexpectedError(done) {\n  return function(error) {\n    // eslint-disable-next-line no-console\n    console.error('Error Caught', error.message, error.stack);\n    expect(true).toEqual(false);\n    done();\n  };\n}\n\ndescribe('ExcelJS', () => {\n  it('should read and write xlsx via binary buffer', done => {\n    const wb = new ExcelJS.Workbook();\n    const ws = wb.addWorksheet('blort');\n\n    ws.getCell('A1').value = 'Hello, World!';\n    ws.getCell('A2').value = 7;\n\n    wb.xlsx\n      .writeBuffer()\n      .then(buffer => {\n        const wb2 = new ExcelJS.Workbook();\n        return wb2.xlsx.load(buffer).then(() => {\n          const ws2 = wb2.getWorksheet('blort');\n          expect(ws2).toBeTruthy();\n\n          expect(ws2.getCell('A1').value).toEqual('Hello, World!');\n          expect(ws2.getCell('A2').value).toEqual(7);\n          done();\n        });\n      })\n      .catch(error => {\n        throw error;\n      })\n      .catch(unexpectedError(done));\n  });\n  it('should read and write xlsx via base64 buffer', done => {\n    const options = {\n      base64: true,\n    };\n    const wb = new ExcelJS.Workbook();\n    const ws = wb.addWorksheet('blort');\n\n    ws.getCell('A1').value = 'Hello, World!';\n    ws.getCell('A2').value = 7;\n\n    wb.xlsx\n      .writeBuffer(options)\n      .then(buffer => {\n        const wb2 = new ExcelJS.Workbook();\n        return wb2.xlsx.load(buffer.toString('base64'), options).then(() => {\n          const ws2 = wb2.getWorksheet('blort');\n          expect(ws2).toBeTruthy();\n\n          expect(ws2.getCell('A1').value).toEqual('Hello, World!');\n          expect(ws2.getCell('A2').value).toEqual(7);\n          done();\n        });\n      })\n      .catch(error => {\n        throw error;\n      })\n      .catch(unexpectedError(done));\n  });\n  it('should write csv via buffer', done => {\n    const wb = new ExcelJS.Workbook();\n    const ws = wb.addWorksheet('blort');\n\n    ws.getCell('A1').value = 'Hello, World!';\n    ws.getCell('B1').value = 'What time is it?';\n    ws.getCell('A2').value = 7;\n    ws.getCell('B2').value = '12pm';\n\n    wb.csv\n      .writeBuffer()\n      .then(buffer => {\n        expect(buffer.toString()).toEqual(\n          '\"Hello, World!\",What time is it?\\n7,12pm'\n        );\n        done();\n      })\n      .catch(error => {\n        throw error;\n      })\n      .catch(unexpectedError(done));\n  });\n});\n"],"mappings":"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","ignoreList":[]}