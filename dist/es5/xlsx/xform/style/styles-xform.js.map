{"version":3,"file":"styles-xform.js","names":["Enums","require","XmlStream","CompositeXform","BaseXform","StaticXform","ListXform","FontXform","FillXform","BorderXform","NumFmtXform","StyleXform","DxfXform","ColorXform","SystemColorsXform","constructor","map","indexedColors","tag","count","childXform","rgbColor","prepare","model","options","hasContent","length","render","xmlStream","openNode","closeNode","createNewModel","node","onParserClose","name","parser","NUMFMT_BASE","StylesXform","initialise","numFmts","fonts","$","fills","borders","cellStyleXfs","cellXfs","xfId","dxfs","always","colors","numFmt","font","fill","border","style","cellStyles","STATIC_XFORMS","tableStyles","extLst","init","initIndex","index","numFmtNextId","styles","_addBorder","_addStyle","numFmtId","fontId","fillId","borderId","_addFill","type","pattern","weakMap","WeakMap","openXml","StdDocAttributes","STYLESHEET_ATTRIBUTES","forEach","numFmtXml","writeXml","_addFont","size","color","theme","family","scheme","fontXml","fillXml","borderXml","styleXml","colorsXml","parseOpen","parseText","text","parseClose","undefined","add","propName","xform","xml","numFmtIndex","id","formatCode","addStyleModel","cellType","has","get","ValueType","Number","_addNumFmtStr","Date","alignment","protection","styleId","set","getStyleModel","getDefaultFmtCode","addStyle","group","part","addDxfStyle","push","getDxfStyle","toXml","getDefaultFmtId","xmlns","c","builtinId","defaultTableStyle","defaultPivotStyle","uri","defaultSlicerStyle","defaultTimelineStyle","StylesXformMock","parseStream","stream","autodrain","Promise","resolve","dateStyleId","_dateStyleId","dateStyle","Mock","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/styles-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst Enums = require('../../../doc/enums');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst CompositeXform = require('../composite-xform');\nconst BaseXform = require('../base-xform');\nconst StaticXform = require('../static-xform');\nconst ListXform = require('../list-xform');\nconst FontXform = require('./font-xform');\nconst FillXform = require('./fill-xform');\nconst BorderXform = require('./border-xform');\nconst NumFmtXform = require('./numfmt-xform');\nconst StyleXform = require('./style-xform');\nconst DxfXform = require('./dxf-xform');\nconst ColorXform = require('./color-xform');\n\nclass SystemColorsXform extends CompositeXform {\n  constructor() {\n    super();\n\n    this.map = {\n      indexedColors: new ListXform({\n        tag: 'indexedColors',\n        count: true,\n        childXform: new ColorXform('rgbColor')\n      }),\n      rgbColor: new ColorXform('rgbColor')\n    };\n  }\n\n  get tag() {\n    return 'colors';\n  }\n\n  prepare(model, options) {\n    this.map.indexedColors.prepare(model, options);\n  }\n\n  hasContent(model) {\n    return model && model.length;\n  }\n\n  render(xmlStream, model) {\n    if (!this.hasContent(model)) {\n      return;\n    }\n\n    xmlStream.openNode('colors');\n    this.map.indexedColors.render(xmlStream, model);\n    xmlStream.closeNode();\n  }\n\n  createNewModel(node) {\n    return []\n  }\n\n  onParserClose(name, parser) {\n    this.model = this.parser.model;\n  }\n}\n\n// custom numfmt ids start here\nconst NUMFMT_BASE = 164;\n\n// =============================================================================\n// StylesXform is used to generate and parse the styles.xml file\n// it manages the collections of fonts, number formats, alignments, etc\nclass StylesXform extends BaseXform {\n  constructor(initialise) {\n    super();\n\n    this.map = {\n      numFmts: new ListXform({tag: 'numFmts', count: true, childXform: new NumFmtXform()}),\n      fonts: new ListXform({\n        tag: 'fonts',\n        count: true,\n        childXform: new FontXform(),\n        $: {'x14ac:knownFonts': 1},\n      }),\n      fills: new ListXform({tag: 'fills', count: true, childXform: new FillXform()}),\n      borders: new ListXform({tag: 'borders', count: true, childXform: new BorderXform()}),\n      cellStyleXfs: new ListXform({tag: 'cellStyleXfs', count: true, childXform: new StyleXform()}),\n      cellXfs: new ListXform({\n        tag: 'cellXfs',\n        count: true,\n        childXform: new StyleXform({xfId: true}),\n      }),\n      dxfs: new ListXform({tag: 'dxfs', always: true, count: true, childXform: new DxfXform()}),\n      colors: new SystemColorsXform(),\n\n      // for style manager\n      numFmt: new NumFmtXform(),\n      font: new FontXform(),\n      fill: new FillXform(),\n      border: new BorderXform(),\n      style: new StyleXform({xfId: true}),\n\n      cellStyles: StylesXform.STATIC_XFORMS.cellStyles,\n      tableStyles: StylesXform.STATIC_XFORMS.tableStyles,\n      extLst: StylesXform.STATIC_XFORMS.extLst,\n    };\n\n    if (initialise) {\n      // StylesXform also acts as style manager and is used to build up styles-model during worksheet processing\n      this.init();\n    }\n  }\n\n  initIndex() {\n    this.index = {\n      style: {},\n      numFmt: {},\n      numFmtNextId: 164, // start custom format ids here\n      font: {},\n      border: {},\n      fill: {},\n    };\n  }\n\n  init() {\n    // Prepare for Style Manager role\n    this.model = {\n      styles: [],\n      numFmts: [],\n      fonts: [],\n      borders: [],\n      fills: [],\n      dxfs: [],\n    };\n\n    this.initIndex();\n\n    // default (zero) border\n    this._addBorder({});\n\n    // add default (all zero) style\n    this._addStyle({numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0});\n\n    // add default fills\n    this._addFill({type: 'pattern', pattern: 'none'});\n    this._addFill({type: 'pattern', pattern: 'gray125'});\n\n    this.weakMap = new WeakMap();\n  }\n\n  render(xmlStream, model) {\n    model = model || this.model;\n    //\n    //   <fonts count=\"2\" x14ac:knownFonts=\"1\">\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n\n    xmlStream.openNode('styleSheet', StylesXform.STYLESHEET_ATTRIBUTES);\n\n    if (this.index) {\n      // model has been built by style manager role (contains xml)\n      if (model.numFmts && model.numFmts.length) {\n        xmlStream.openNode('numFmts', {count: model.numFmts.length});\n        model.numFmts.forEach(numFmtXml => {\n          xmlStream.writeXml(numFmtXml);\n        });\n        xmlStream.closeNode();\n      }\n\n      if (!model.fonts.length) {\n        // default (zero) font\n        this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\n      }\n      xmlStream.openNode('fonts', {count: model.fonts.length, 'x14ac:knownFonts': 1});\n      model.fonts.forEach(fontXml => {\n        xmlStream.writeXml(fontXml);\n      });\n      xmlStream.closeNode();\n\n      xmlStream.openNode('fills', {count: model.fills.length});\n      model.fills.forEach(fillXml => {\n        xmlStream.writeXml(fillXml);\n      });\n      xmlStream.closeNode();\n\n      xmlStream.openNode('borders', {count: model.borders.length});\n      model.borders.forEach(borderXml => {\n        xmlStream.writeXml(borderXml);\n      });\n      xmlStream.closeNode();\n\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\n\n      xmlStream.openNode('cellXfs', {count: model.styles.length});\n      model.styles.forEach(styleXml => {\n        xmlStream.writeXml(styleXml);\n      });\n      xmlStream.closeNode();\n    } else {\n      // model is plain JSON and needs to be xformed\n      this.map.numFmts.render(xmlStream, model.numFmts);\n      this.map.fonts.render(xmlStream, model.fonts);\n      this.map.fills.render(xmlStream, model.fills);\n      this.map.borders.render(xmlStream, model.borders);\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\n      this.map.cellXfs.render(xmlStream, model.styles);\n    }\n\n    StylesXform.STATIC_XFORMS.cellStyles.render(xmlStream);\n\n    this.map.dxfs.render(xmlStream, model.dxfs);\n\n    StylesXform.STATIC_XFORMS.tableStyles.render(xmlStream);\n    StylesXform.STATIC_XFORMS.extLst.render(xmlStream);\n\n    if (!this.index) {\n      this.map.colors.render(xmlStream, model.colors);\n    } else if (SystemColorsXform.colorsXml) {\n      xmlStream.writeXml(SystemColorsXform.colorsXml);\n    }\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'styleSheet':\n        this.initIndex();\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        return true;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'styleSheet': {\n        this.model = {};\n        const add = (propName, xform) => {\n          if (xform.model && xform.model.length) {\n            this.model[propName] = xform.model;\n          }\n        };\n        add('numFmts', this.map.numFmts);\n        add('fonts', this.map.fonts);\n        add('fills', this.map.fills);\n        add('borders', this.map.borders);\n        add('styles', this.map.cellXfs);\n        add('dxfs', this.map.dxfs);\n\n        // share xml when preparing\n        const colorsXml = this.map.colors.xml;\n        if (colorsXml) {\n          SystemColorsXform.colorsXml = colorsXml\n        }\n\n        // index numFmts\n        this.index = {\n          model: [],\n          numFmt: [],\n        };\n        if (this.model.numFmts) {\n          const numFmtIndex = this.index.numFmt;\n          this.model.numFmts.forEach(numFmt => {\n            numFmtIndex[numFmt.id] = numFmt.formatCode;\n          });\n        }\n\n        return false;\n      }\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    if (!model) {\n      return 0;\n    }\n\n    // if we have no default font, add it here now\n    if (!this.model.fonts.length) {\n      // default (zero) font\n      this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\n    }\n\n    // if we have seen this style object before, assume it has the same styleId\n    if (this.weakMap && this.weakMap.has(model)) {\n      return this.weakMap.get(model);\n    }\n\n    const style = {};\n    cellType = cellType || Enums.ValueType.Number;\n\n    if (model.numFmt) {\n      style.numFmtId = this._addNumFmtStr(model.numFmt);\n    } else {\n      switch (cellType) {\n        case Enums.ValueType.Number:\n          style.numFmtId = this._addNumFmtStr('General');\n          break;\n        case Enums.ValueType.Date:\n          style.numFmtId = this._addNumFmtStr('mm-dd-yy');\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (model.font) {\n      style.fontId = this._addFont(model.font);\n    }\n\n    if (model.border) {\n      style.borderId = this._addBorder(model.border);\n    }\n\n    if (model.fill) {\n      style.fillId = this._addFill(model.fill);\n    }\n\n    if (model.alignment) {\n      style.alignment = model.alignment;\n    }\n\n    if (model.protection) {\n      style.protection = model.protection;\n    }\n\n    const styleId = this._addStyle(style);\n    if (this.weakMap) {\n      this.weakMap.set(model, styleId);\n    }\n    return styleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(id) {\n    // if the style doesn't exist return null\n    const style = this.model.styles[id];\n    if (!style) return null;\n\n    // have we built this model before?\n    let model = this.index.model[id];\n    if (model) return model;\n\n    // build a new model\n    model = this.index.model[id] = {};\n\n    // -------------------------------------------------------\n    // number format\n    if (style.numFmtId) {\n      const numFmt = this.index.numFmt[style.numFmtId] || NumFmtXform.getDefaultFmtCode(style.numFmtId);\n      if (numFmt) {\n        model.numFmt = numFmt;\n      }\n    }\n\n    function addStyle(name, group, styleId) {\n      if (styleId || styleId === 0) {\n        const part = group[styleId];\n        if (part) {\n          model[name] = part;\n        }\n      }\n    }\n\n    addStyle('font', this.model.fonts, style.fontId);\n    addStyle('border', this.model.borders, style.borderId);\n    addStyle('fill', this.model.fills, style.fillId);\n\n    // -------------------------------------------------------\n    // alignment\n    if (style.alignment) {\n      model.alignment = style.alignment;\n    }\n\n    // -------------------------------------------------------\n    // protection\n    if (style.protection) {\n      model.protection = style.protection;\n    }\n\n    return model;\n  }\n\n  addDxfStyle(style) {\n    if (style.numFmt) {\n      // register numFmtId to use it during dxf-xform rendering\n      style.numFmtId = this._addNumFmtStr(style.numFmt);\n    }\n\n    this.model.dxfs.push(style);\n    return this.model.dxfs.length - 1;\n  }\n\n  getDxfStyle(id) {\n    return this.model.dxfs[id];\n  }\n\n  // =========================================================================\n  // Private Interface\n  _addStyle(style) {\n    const xml = this.map.style.toXml(style);\n    let index = this.index.style[xml];\n    if (index === undefined) {\n      index = this.index.style[xml] = this.model.styles.length;\n      this.model.styles.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Number Formats\n  _addNumFmtStr(formatCode) {\n    // check if default format\n    let index = NumFmtXform.getDefaultFmtId(formatCode);\n    if (index !== undefined) return index;\n\n    // check if already in\n    index = this.index.numFmt[formatCode];\n    if (index !== undefined) return index;\n\n    index = this.index.numFmt[formatCode] = NUMFMT_BASE + this.model.numFmts.length;\n    const xml = this.map.numFmt.toXml({id: index, formatCode});\n    this.model.numFmts.push(xml);\n    return index;\n  }\n\n  // =========================================================================\n  // Fonts\n  _addFont(font) {\n    const xml = this.map.font.toXml(font);\n    let index = this.index.font[xml];\n    if (index === undefined) {\n      index = this.index.font[xml] = this.model.fonts.length;\n      this.model.fonts.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Borders\n  _addBorder(border) {\n    const xml = this.map.border.toXml(border);\n    let index = this.index.border[xml];\n    if (index === undefined) {\n      index = this.index.border[xml] = this.model.borders.length;\n      this.model.borders.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Fills\n  _addFill(fill) {\n    const xml = this.map.fill.toXml(fill);\n    let index = this.index.fill[xml];\n    if (index === undefined) {\n      index = this.index.fill[xml] = this.model.fills.length;\n      this.model.fills.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n}\n\nStylesXform.STYLESHEET_ATTRIBUTES = {\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n  'mc:Ignorable': 'x14ac x16r2',\n  'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n  'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\n};\nStylesXform.STATIC_XFORMS = {\n  cellStyles: new StaticXform({\n    tag: 'cellStyles',\n    $: {count: 1},\n    c: [{tag: 'cellStyle', $: {name: 'Normal', xfId: 0, builtinId: 0}}],\n  }),\n  dxfs: new StaticXform({tag: 'dxfs', $: {count: 0}}),\n  tableStyles: new StaticXform({\n    tag: 'tableStyles',\n    $: {count: 0, defaultTableStyle: 'TableStyleMedium2', defaultPivotStyle: 'PivotStyleLight16'},\n  }),\n  extLst: new StaticXform({\n    tag: 'extLst',\n    c: [\n      {\n        tag: 'ext',\n        $: {\n          uri: '{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}',\n          'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\n        },\n        c: [{tag: 'x14:slicerStyles', $: {defaultSlicerStyle: 'SlicerStyleLight1'}}],\n      },\n      {\n        tag: 'ext',\n        $: {\n          uri: '{9260A510-F301-46a8-8635-F512D64BE5F5}',\n          'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main',\n        },\n        c: [{tag: 'x15:timelineStyles', $: {defaultTimelineStyle: 'TimeSlicerStyleLight1'}}],\n      },\n    ],\n  }),\n};\n\n// the stylemanager mock acts like StyleManager except that it always returns 0 or {}\nclass StylesXformMock extends StylesXform {\n  constructor() {\n    super();\n\n    this.model = {\n      styles: [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}],\n      numFmts: [],\n      fonts: [{size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'}],\n      borders: [{}],\n      fills: [\n        {type: 'pattern', pattern: 'none'},\n        {type: 'pattern', pattern: 'gray125'},\n      ],\n    };\n  }\n\n  // =========================================================================\n  // Style Manager Interface\n\n  // override normal behaviour - consume and dispose\n  parseStream(stream) {\n    stream.autodrain();\n    return Promise.resolve();\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    switch (cellType) {\n      case Enums.ValueType.Date:\n        return this.dateStyleId;\n      default:\n        return 0;\n    }\n  }\n\n  get dateStyleId() {\n    if (!this._dateStyleId) {\n      const dateStyle = {\n        numFmtId: NumFmtXform.getDefaultFmtId('mm-dd-yy'),\n      };\n      this._dateStyleId = this.model.styles.length;\n      this.model.styles.push(dateStyle);\n    }\n    return this._dateStyleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(/* id */) {\n    return {};\n  }\n}\n\nStylesXform.Mock = StylesXformMock;\n\nmodule.exports = StylesXform;"],"mappings":"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","ignoreList":[]}